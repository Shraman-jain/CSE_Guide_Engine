python adding element list iterating subscribe rss find centralized trusted content collaborate around technologies use teams q work connect share knowledge within single location structured easy search know allowed remove elements iterating list allowed add elements python list iterating example tried code seems work fine however n't know 's lucky break point future edit prefer copy list since `` myarr '' huge therefore would slow also need check appended objects `` somecond '' edit point `` somecond '' false infinite loop edit someone asked `` somecond '' function object myarr size time `` somecond '' true new object appended list new object size smaller `` somecond '' epsilon small objects small return `` false '' n't idiomatic c way ought bullet-proof wo n't fast 'm pretty sure indexing list python walks linked list `` shlemiel painter '' algorithm tend worry optimization becomes clear particular section code really problem first make work worry making fast necessary want iterate elements want iterate elements originally list well according http //docs.python.org/tutorial/controlflow.html safe modify sequence iterated loop happen mutable sequence types lists need modify list iterating example duplicate selected items must iterate copy could use islice itertools create iterator smaller portion list append entries list without impacting items 're iterating even better n't even iterate elements increment step size short you'are absolutely sure new objects fail somecond check code works fine wastes time iterating newly added objects giving proper answer understand considers bad idea change list/dict iterating using statement python tries clever returns dynamically calculated item time take list example python remembers index time returns l index changing l result l index messy note stackoverflow question demonstrate worst case adding element iterating infinite loop try read bug following python repl print numbers non-stop memory used killed system/user understand internal reason let 's discuss solutions iterating origin list modify copied one instead handling control python decides iterate list iterating calculate list length loop length times instead modifying origin list store new object new list concatenate afterward access list elements directly i. append list make copy original list iterate see modified code similar problem today list items needed checking objects passed check added result list n't pass changed bit might still work size change 'd add back list rechecking went solution like list effectively queue probably used sort queue lists small like items works use index loop instead loop want loop also loop elements added list loop expanding s.lott 's answer new items processed well final list done alternate solution assuming adding last list arr try method often use boilerplate run program freeze infinite loop forget terminate loop unless need thanks contributing answer stack overflow avoid … learn see tips writing great answers required never shown required never shown clicking post answer agree terms service privacy policy cookie policy subscribe rss feed copy paste url rss reader site design logo © stack exchange inc user contributions licensed cc by-sa rev ... privacy clicking accept cookies agree stack exchange store cookies device disclose information accordance cookie policy 